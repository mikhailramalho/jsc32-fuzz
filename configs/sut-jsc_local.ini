# This configuration assumes local ARM machine to execute SUT natively
# For remote execution of SUTs see jsc-only.ini

[sut.jsc]
call=igalia.fuzzinator.call.SubprocessJSCCall
call.decorate(1)=fuzzinator.call.ExitCodeFilter
call.decorate(2)=fuzzinator.call.GdbBacktraceDecorator
call.decorate(3)=fuzzinator.call.UniqueIdDecorator
call.decorate(4)=fuzzinator.call.PlatformInfoDecorator
call.decorate(5)=fuzzinator.call.SubprocessPropertyDecorator
call.decorate(6)=fuzzinator.call.SubprocessPropertyDecorator
call.decorate(7)=fuzzinator.call.SubprocessPropertyDecorator
call.decorate(8)=fuzzinator.call.SubprocessPropertyDecorator
call.decorate(9)=fuzzinator.call.AnonymizeDecorator

# NOTE:
# The SUT does not need the FileWriterDecorator because the fuzzer
# already writes the tests into files.
# It is however needed for validation/reduction because the test
# is written into the database as a byte stream.

# Reduce job settings.
reduce=fuzzinator.reduce.Picireny
reduce_call=${call}
reduce_call.decorate(1)=${call.decorate(1)}
reduce_call.decorate(2)=${call.decorate(2)}
reduce_call.decorate(3)=${call.decorate(3)}
reduce_call.decorate(4)=${call.decorate(4)}
reduce_call.decorate(5)=${call.decorate(5)}
reduce_call.decorate(6)=${call.decorate(6)}
reduce_call.decorate(7)=${call.decorate(7)}
reduce_call.decorate(8)=${call.decorate(8)}
reduce_call.decorate(9)=${call.decorate(9)}
reduce_call.decorate(10)=fuzzinator.call.FileWriterDecorator

# Number of jobs for reduction
reduce_cost=${sut.jsc.reduce:jobs}

# Exporter
exporter=fuzzinator.exporter.TestExporter

# Tracker
tracker=fuzzinator.tracker.GitlabTracker

# Issue Formatter
formatter=fuzzinator.formatter.JinjaFormatter
formatter.decorate(0)=fuzzinator.formatter.DecoderDecorator

wui_formatter=fuzzinator.formatter.JinjaFormatter
wui_formatter.decorate(0)=fuzzinator.formatter.DecoderDecorator
wui_formatter.decorate(1)=fuzzinator.formatter.MarkdownDecorator

# Update job settings.
update_condition=fuzzinator.update.TimestampUpdateCondition
update=fuzzinator.update.SubprocessUpdate
validate_after_update=True

[sut.jsc.call]
cwd=${jsc:root_dir}
command=./${jsc:binary} {options} {test}
timeout=${jsc:timeout}

# Exit code filter - real issues have these exit codes
[sut.jsc.call.decorate(1)]
exit_codes=[-11, -8, -6, -4, 132, 134, 136, 139, 199]

# GdbBacktraceDecorator
[sut.jsc.call.decorate(2)]
cwd=${sut.jsc.call:cwd}
command=${sut.jsc.call:command}

# UniqueIdDecorator
[sut.jsc.call.decorate(3)]
properties=["error_type", "condition", "function"]

# Decorator(4) - PlatformInfo does not need any options

# Saves the HEAD git sha into the bug as version
[sut.jsc.call.decorate(5)]
property=version
cwd=${sut.jsc.call:cwd}
command=git rev-parse HEAD

# Saves the build name : debug, release, etc as build_name
[sut.jsc.call.decorate(6)]
property=build_name
command=echo "${jsc:build_name}"

# Saves the build command as build_command
[sut.jsc.call.decorate(7)]
property=build_command
command=echo "${jsc:build}"

# Saves the execution command as exec_command
[sut.jsc.call.decorate(8)]
property=exec_command
command=echo "${sut.jsc.call:command}"

[sut.jsc.call.decorate(9)]
properties=["stderr", "stdout", "backtrace"]
old_text=${sut.jsc.call:cwd}
new_text=WebKit/

# REDUCE/VALIDATE

[sut.jsc.reduce]
hddmin=${jsc.picireny:hddmin}
parallel=${jsc.picireny:parallel}
combine_loops=${jsc.picireny:combine_loops}
split_method=${jsc.picireny:split_method}
subset_first=${jsc.picireny:subset_first}
subset_iterator=${jsc.picireny:subset_iterator}
complement_iterator=${jsc.picireny:complement_iterator}
jobs=${jsc.picireny:jobs}
max_utilization=${jsc.picireny:max_utilization}
encoding=${jsc.picireny:encoding}
antlr=${jsc.picireny:antlr}
format=${jsc.picireny:format}
grammar=${jsc.picireny:grammar}
start=${jsc.picireny:start}
replacements=${jsc.picireny:replacements}
lang=${jsc.picireny:lang}
hdd_star=${jsc.picireny:hdd_star}
flatten_recursion=${jsc.picireny:flatten_recursion}
squeeze_tree=${jsc.picireny:squeeze_tree}
skip_unremovable=${jsc.picireny:skip_unremovable}
skip_whitespace=${jsc.picireny:skip_whitespace}
build_hidden_tokens=${jsc.picireny:build_hidden_tokens}
granularity=${jsc.picireny:granularity}
cache_class=${jsc.picireny:cache_class}
cleanup=${jsc.picireny:cleanup}

[sut.jsc.reduce_call]
cwd=${sut.jsc.call:cwd}
command=${sut.jsc.call:command}
timeout=${sut.jsc.call:timeout}

# ExitCodeFilter
[sut.jsc.reduce_call.decorate(1)]
exit_codes=${sut.jsc.call.decorate(1):exit_codes}

# GdbBacktraceDecorator
[sut.jsc.reduce_call.decorate(2)]
cwd=${sut.jsc.call.decorate(2):cwd}
command=${sut.jsc.call.decorate(2):command}

# UniqueIdDecorator
[sut.jsc.reduce_call.decorate(3)]
properties=${sut.jsc.call.decorate(3):properties}

# Decorator(4) - PlatformInfo does not need any options

# SubprocessPropertyDecorator
[sut.jsc.reduce_call.decorate(5)]
property=${sut.jsc.call.decorate(5):property}
cwd=${sut.jsc.call.decorate(5):cwd}
command=${sut.jsc.call.decorate(5):command}

# SubprocessPropertyDecorator
[sut.jsc.reduce_call.decorate(6)]
property=${sut.jsc.call.decorate(6):property}
command=${sut.jsc.call.decorate(6):command}

# SubprocessPropertyDecorator
[sut.jsc.reduce_call.decorate(7)]
property=${sut.jsc.call.decorate(7):property}
command=${sut.jsc.call.decorate(7):command}

# SubprocessPropertyDecorator
[sut.jsc.reduce_call.decorate(8)]
property=${sut.jsc.call.decorate(8):property}
command=${sut.jsc.call.decorate(8):command}

# AnonymizeDecorator
[sut.jsc.reduce_call.decorate(9)]
properties=${sut.jsc.call.decorate(9):properties}
old_text=${sut.jsc.call.decorate(9):old_text}
new_text=${sut.jsc.call.decorate(9):new_text}

# FileWriterDecorator
[sut.jsc.reduce_call.decorate(10)]
filename=${fuzzinator:work_dir}/jsc/picireny/{uid}.js

## JS Fuzzer
[fuzz.js-fuzzer]
sut=jsc
fuzzer=fuzzinator.fuzzer.SubprocessRunner
batch=20

[fuzz.js-fuzzer.fuzzer.init]
outdir=${fuzzinator:work_dir}/js_fuzzer/{uid}
command=node ./run.js -i ${js-fuzzer.custom:webtests} -n ${fuzz.js-fuzzer:batch} -o ${fuzz.js-fuzzer.fuzzer.init:outdir}
cwd=${js-fuzzer.custom:cwd}
env={"APP_NAME": "jsc"}
contents=False

### EXPORTER ###

[sut.jsc.exporter.init]
extension=.js
type=text/plain

### FORMATTER ###

[sut.jsc.formatter.init]
short={{"%s %s in %s"|format(error_type, condition, function)|truncate(255)}}
long_file=${fuzzinator.custom:config_root}/configs/jsc-report.txt

[sut.jsc.wui_formatter.init]
short=${sut.jsc.formatter.init:short}
long_file=${sut.jsc.formatter.init:long_file}

[sut.jsc.wui_formatter.decorate(1)]
extensions=["extra", "codehilite", "fenced_code"]

### TRACKER ###

[sut.jsc.tracker.init]
url=${fuzzinator.custom:gitlab_url}
project=${fuzzinator.custom:gitlab_project}
private_token=${fuzzinator.custom:gitlab_token}

### UPDATE ###

[sut.jsc.update_condition]
age=${jsc:age}
path=${jsc:root_dir}/${jsc:binary}

[sut.jsc.update]
cwd=${sut.jsc.call:cwd}
command=${fuzzinator.custom:config_root}/configs/jsc-update.sh "${jsc:build}"
env=${jsc:build_env}